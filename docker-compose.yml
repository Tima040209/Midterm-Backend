version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_DATABASE: ecommerce_db
      MYSQL_ROOT_PASSWORD: tima12345
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - ecommerce_net

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - ecommerce_net

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - ecommerce_net

  celery:
    build: .
    command: celery -A ecommerce_project worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
    networks:
      - ecommerce_net

  web:
    build: .
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=ecommerce_db
      - MYSQL_USER=root
      - MYSQL_PASSWORD=tima12345
    networks:
      - ecommerce_net

  nginx:
    image: nginx:latest
    container_name: nginx_django
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web
    networks:
      - ecommerce_net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - ecommerce_net

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - ecommerce_net

  web1:
    build: .
    container_name: django_app1
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8001:8000"
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=ecommerce_db
      - MYSQL_USER=root
      - MYSQL_PASSWORD=tima12345
    networks:
      - ecommerce_net

  web2:
    build: .
    container_name: django_app2
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8002:8000"
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=ecommerce_db
      - MYSQL_USER=root
      - MYSQL_PASSWORD=tima12345
    networks:
      - ecommerce_net

volumes:
  mysql_data:
  grafana-data:

networks:
  ecommerce_net:
    driver: bridge
